# [표현식 for 항목 in 반복 객체 if 조건]

squares = [x ** 2 for x in range(1, 11)]
print(squares)

# 짝수 필터링 1 ~ 10 까지 숫자 중 짝수만 포함하는 리스트 작성
evens = [x for x in range(1, 11) if x % 2 == 0]
'''
evens = []
for x in range(1, 11):
    if x % 2 == 0:
        evens.append(x)
'''
print(evens)

# 문자열 길이 리스트 생성
fruits = ["apple", "pear", "banana"]
length = [len(i) for i in fruits ]
'''
length = []
for i in fruits:
    length.append(len(i))

'''

print(length)

# 중첩된 리스트 컴프리헨션
matrix = [[1,2,3],[4,5,6],[7,8,9]]
flat = [num for row in matrix for num in row]
print(flat)

# 1. 짝수 필터링
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
evens = [even for even in numbers if even % 2 == 0]
print(evens)

# 2. 문자열 길이 리스트 생성하기
words = ["apple", "banana", "cherry", "date"]
lengths = [len(x) for x in words]
print(lengths)

# 3. 제곱 리스트 1 ~ 20
squares = [num ** 2 for num in range(1, 21)]
print(squares)

# 4. 특정 문자로 시작하는 단어 필터링
fruits = ["apple", "banana", "apricot", "cherry", "avocado"]
start_a = [word for word in fruits if word[0] == "a"]
print(start_a)

# 5. 다음 숫자 리스트에서 짝수는 그대로 두고, 홀수는 -1을 곱한 값으로 새로운 리스트를 생성
numbers = [1, 2, 3, 4, 5]
evens = [number if number % 2 == 0 else -number for number in numbers]
print(evens)

# 6. 다음 2차원 리스트를 1차원 리스트로 변환하세요.
matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
numbers = [num for row in matrix for num in row]
print(numbers)

# 7. 다음 리스트에서 각 단어를 대문자로 변환하되, 단어의 길이가 5 이하인 경우에만 변환하세요.
words = ["apple", "banana", "fig", "grape", "kiwi"]
ans = [
    word.capitalize() if len(word) <= 5 else
    word
    for word in words
]
print(ans)

# 8. 다음 중첩 리스트에서 모든 숫자 중 짝수만 필터링하여 새로운 리스트를 만드시오.
matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]]
evens = [num for row in matrix for num in row if num % 2 == 0]
print(evens)

# 9. 두 리스트가 있습니다.
# 첫 번째 리스트의 숫자를 두 번째 리스트의 문자열 길이와 매칭하여 새로운 리스트를 생성하세요.
numbers = [1, 2, 3, 4]
words = ["apple", "banana", "fig", "grape"]
new_list = [(number, word) for number, word in zip(numbers, words)]
print(new_list)

# 10. 중복 제거 및 정렬
# 중복된 숫자를 제거하고, 오름차순으로 정렬된 리스트를 생성하세요.
numbers = [5, 3, 2, 8, 1, 5, 2, 10, 3]
new_list = sorted([num for i, num in enumerate(numbers) if num not in numbers[:i]])
print(new_list)

'''
보너스 문제: FizzBuzz 리스트 컴프리헨션
1부터 20까지의 숫자 중에서:

3의 배수는 "Fizz"
5의 배수는 "Buzz"
15의 배수는 "FizzBuzz"zja
나머지 숫자는 그대로 리스트에 포함되도록 리스트 컴프리헨션을 작성하세요.

결과
[1, 2, 'Fizz', 4, 'Buzz', 'Fizz', 7, 8, 'Fizz', 'Buzz', 11, 'Fizz', 13, 14, 'FizzBuzz', 16, 17, 'Fizz', 19, 'Buzz']
'''

fizz_buzz = [
    "Fizz" if num % 3 == 0 else
    "Buzz" if num % 5 == 0 else
    "FizzBuzz" if num % 3 == 0 and num % 5 == 0 else
    num
    for num in range(1, 21)
             ]
print(fizz_buzz)

# [실전 문제] 다음 숫자 리스트에서 짝수는 제곱, 3의 배수는 "Fizz", 나머지는 그대로 유지하는 리스트 컴프리헨션을 작성하세요.
numbers = [1, 2, 3, 4, 5, 6]
ans = [
    num ** 2 if num % 2 == 0 else
    "Fizz" if num % 3 == 0 else
    num
    for num in numbers
]
print(ans)

# ex 1. Square Numbers
squares = {x: x ** 2 for x in range(1, 6)}

# ex 2. Convert List to Dictionary
fruits = ["apple", "banana", "cherry"]
fruits_length = {fruit:len(fruit) for fruit in fruits}
print(fruits_length)

# ex 3. Filter Even Numbers
numbers = [1, 2, 3, 4, 5, 6]
even_squares = {x: x ** 2 for x in numbers if x % 2 == 0}
print(even_squares)

# ex 4. Swap Keys and Values
original = {"a": 1, "b": 2, "c": 3}
swap = {value: key for key, value in original.items()}
print(swap)

# ex 5. Conditional Value
odd_even = {x: "even" if x % 2 == 0 else "odd" for x in range(1, 11)}
print(odd_even)

